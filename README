
A learning project to implement a typed functional programming
language/ dialect of ML, which aims to be accessible and usable like
Python is.

The starting point is a variation of Pyret.

Source file showing a bunch of supported features:
https://github.com/JakeWheat/teaberry/tree/master/examples/tests/fulltests/tour.tea

See the examples and built in modules directories for more:

https://github.com/JakeWheat/teaberry/tree/master/examples/tests/fulltests
https://github.com/JakeWheat/teaberry/tree/master/built-in-modules

Compile and run the tests:

cabal run teaberry-dev --disable-optimization -- test --hide-successes --ansi-tricks=false

Use the command line interface:

cabal run teaberry --disable-optimization -- -f examples/tests/fulltests/tour.tea
cabal run teaberry --disable-optimization -- -c "3 + 4"

repl:
cabal run teaberry --disable-optimization

About Pyret
-----------

Pyret is a functional programming language with an optional type
checker designed for teaching programming.

Manual:
https://www.pyret.org/docs/latest/index.html

Tutorial:
https://papl.cs.brown.edu/2019/index.html

PLAI, a book about implementing programming languages:
https://www.plai.org/
